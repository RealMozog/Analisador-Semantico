<1: PRE, const>
<1: DEL, {>
<2: PRE, int>
<2: IDE, a>
<2: REL, =>
<2: NRO, 4>
<2: DEL, ;>
<3: PRE, boolean>
<3: IDE, aux1>
<3: REL, =>
<3: PRE, true>
<3: DEL, ;>
<4: PRE, real>
<4: IDE, numeroAux>
<4: REL, =>
<4: NRO, 4.478>
<4: DEL, ;>
<5: PRE, string>
<5: IDE, auxString>
<5: REL, =>
<5: CDC, "Testando">
<5: DEL, ;>
<6: DEL, }>
<7: PRE, var>
<7: DEL, {>
<8: PRE, int>
<8: IDE, auxNum>
<8: DEL, [>
<8: NRO, 2>
<8: DEL, ]>
<8: DEL, [>
<8: NRO, 10>
<8: DEL, ]>
<8: DEL, ,>
<8: IDE, testeNum>
<8: DEL, ,>
<8: IDE, next>
<8: DEL, ;>
<9: PRE, string>
<9: IDE, auxString>
<9: DEL, ;>
<10: PRE, struct>
<10: IDE, istruct>
<10: PRE, extends>
<10: IDE, j>
<10: DEL, {>
<11: PRE, var>
<11: DEL, {>
<12: PRE, int>
<12: IDE, varia>
<12: DEL, ;>
<13: DEL, }>
<14: PRE, struct>
<14: IDE, inteiro>
<14: DEL, {>
<15: PRE, var>
<15: DEL, {>
<16: PRE, int>
<16: IDE, varia>
<16: DEL, ;>
<17: DEL, }>
<18: DEL, }>
<20: IDE, function>
<20: PRE, int>
<20: IDE, starti>
<20: DEL, (>
<20: DEL, )>
<20: DEL, {>
<21: PRE, var>
<21: DEL, {>
<22: PRE, int>
<22: IDE, numLocal>
<22: DEL, [>
<22: NRO, 5>
<22: DEL, ]>
<22: DEL, ;>
<23: PRE, real>
<23: IDE, numAux>
<23: DEL, ;>
<24: DEL, }>
<25: IDE, numLocal>
<25: REL, =>
<25: NRO, 3>
<25: DEL, ;>
<26: IDE, numAux>
<26: REL, =>
<26: NRO, 1.1>
<26: DEL, ;>
<27: PRE, while>
<27: DEL, (>
<27: IDE, numLocal>
<27: REL, <>
<27: NRO, 3>
<27: DEL, )>
<27: DEL, {>
<28: IDE, a>
<28: REL, =>
<28: IDE, mudaNum>
<28: DEL, (>
<28: IDE, a>
<28: DEL, )>
<28: DEL, ;>
<29: DEL, }>
<31: IDE, aumentaNum>
<31: DEL, (>
<31: IDE, a>
<31: DEL, )>
<31: DEL, ;>
<32: PRE, return>
<32: NRO, 0>
<32: DEL, ;>
<33: DEL, }>
<35: IDE, function>
<35: IDE, inteiro>
<35: IDE, mudaNum>
<35: DEL, (>
<35: PRE, real>
<35: IDE, a>
<35: DEL, ,>
<35: PRE, int>
<35: IDE, b>
<35: DEL, )>
<35: DEL, {>
<36: PRE, var>
<36: DEL, {>
<36: DEL, }>
<37: PRE, if>
<37: DEL, (>
<37: DEL, (>
<37: IDE, a>
<37: REL, ==>
<37: IDE, c>
<37: LOG, &&>
<37: IDE, c>
<37: REL, <=>
<37: IDE, d>
<37: DEL, )>
<37: DEL, )>
<37: PRE, then>
<37: DEL, {>
<38: IDE, a>
<38: ART, ++>
<38: DEL, ;>
<39: DEL, }>
<39: PRE, else>
<39: DEL, {>
<40: PRE, if>
<40: DEL, (>
<40: IDE, a>
<40: REL, <>
<40: NRO, 5>
<40: DEL, )>
<40: PRE, then>
<40: DEL, {>
<41: IDE, b>
<41: REL, =>
<41: IDE, a>
<41: DEL, .>
<41: IDE, besta>
<41: ART, *>
<41: NRO, 3>
<41: DEL, ;>
<42: DEL, }>
<42: PRE, else>
<42: DEL, {>
<43: PRE, if>
<43: DEL, (>
<43: IDE, a>
<43: REL, <>
<43: NRO, 10>
<43: DEL, )>
<43: PRE, then>
<43: DEL, {>
<44: IDE, a>
<44: REL, =>
<44: IDE, a>
<44: ART, +>
<44: NRO, 3>
<44: DEL, ;>
<45: DEL, }>
<46: DEL, }>
<47: DEL, }>
<48: PRE, return>
<48: IDE, a>
<48: DEL, ;>
<49: DEL, }>
<51: PRE, procedure>
<51: IDE, addNum>
<51: DEL, (>
<51: PRE, real>
<51: IDE, a>
<51: DEL, ,>
<51: PRE, int>
<51: IDE, c>
<51: DEL, )>
<51: DEL, {>
<52: PRE, var>
<52: DEL, {>
<52: DEL, }>
<53: IDE, a>
<53: REL, =>
<53: IDE, a>
<53: ART, +>
<53: NRO, 20>
<53: DEL, ;>
<54: DEL, }>

<1: PRE, const>
<1: DEL, {>
<2: PRE, int>
<2: IDE, a>
<2: REL, =>
<2: NRO, 4>
<2: DEL, ;>
<3: PRE, boolean>
<3: IDE, aux1>
<3: REL, =>
<3: PRE, true>
<3: DEL, ;>
<4: PRE, real>
<4: IDE, numeroAux>
<4: REL, =>
<4: NRO, 4.478>
<4: DEL, ;>
<5: PRE, string>
<5: IDE, auxString>
<5: REL, =>
<5: CDC, "Testando">
<5: DEL, ;>
<6: DEL, }>
<7: PRE, var>
<7: DEL, {>
<8: PRE, int>
<8: IDE, auxNum>
<8: DEL, [>
<8: NRO, 2>
<8: DEL, ]>
<8: DEL, [>
<8: NRO, 10>
<8: DEL, ]>
<8: DEL, ,>
<8: IDE, testeNum>
<8: DEL, ,>
<8: IDE, next>
<8: DEL, ;>
<9: PRE, string>
<9: IDE, auxString>
<9: DEL, ;>
<10: PRE, typedef>
<10: PRE, struct>
<10: IDE, j>
<10: DEL, {>
<11: PRE, var>
<11: DEL, {>
<13: DEL, }>
<14: DEL, }>
<15: PRE, struct>
<15: IDE, istruct>
<15: PRE, extends>
<15: IDE, j>
<15: DEL, {>
<16: PRE, var>
<16: DEL, {>
<17: PRE, int>
<17: IDE, varia>
<17: DEL, ;>
<18: DEL, }>
<19: DEL, }>
<20: PRE, struct>
<20: IDE, inteiro>
<20: DEL, {>
<21: PRE, var>
<21: DEL, {>
<22: PRE, int>
<22: IDE, varia>
<22: DEL, ;>
<23: DEL, }>
<24: DEL, }>
<25: DEL, }>
<27: IDE, function>
<27: PRE, int>
<27: IDE, starti>
<27: DEL, (>
<27: DEL, )>
<27: DEL, {>
<28: PRE, var>
<28: DEL, {>
<29: PRE, int>
<29: IDE, numLocal>
<29: DEL, [>
<29: NRO, 5>
<29: DEL, ]>
<29: DEL, ;>
<30: PRE, real>
<30: IDE, numAux>
<30: DEL, ;>
<31: PRE, boolean>
<31: IDE, a>
<31: DEL, ;>
<32: DEL, }>
<33: IDE, numLocal>
<33: REL, =>
<33: CDC, "string">
<33: DEL, ;>
<34: IDE, aux1>
<34: REL, =>
<34: NRO, 12>
<34: DEL, ;>
<35: IDE, testeNum>
<35: REL, =>
<35: PRE, true>
<35: DEL, ;>
<36: IDE, numAux>
<36: REL, =>
<36: NRO, 1.1>
<36: DEL, ;>
<37: PRE, while>
<37: DEL, (>
<37: IDE, numLocal>
<37: REL, <>
<37: NRO, 3>
<37: DEL, )>
<37: DEL, {>
<38: IDE, a>
<38: REL, =>
<38: IDE, mudaNum>
<38: DEL, (>
<38: NRO, 3>
<38: DEL, )>
<38: DEL, ;>
<39: DEL, }>
<41: IDE, aumentaNum>
<41: DEL, (>
<41: IDE, a>
<41: DEL, )>
<41: DEL, ;>
<42: PRE, return>
<42: NRO, 0>
<42: DEL, ;>
<43: DEL, }>
<45: IDE, function>
<45: IDE, inteiro>
<45: IDE, mudaNum>
<45: DEL, (>
<45: PRE, int>
<45: IDE, a>
<45: DEL, )>
<45: DEL, {>
<46: PRE, var>
<46: DEL, {>
<47: PRE, struct>
<47: IDE, inteiro>
<47: PRE, extends>
<47: IDE, j>
<47: DEL, {>
<48: PRE, var>
<48: DEL, {>
<49: PRE, int>
<49: IDE, varia>
<49: DEL, ;>
<50: DEL, }>
<51: DEL, }>
<52: DEL, }>
<53: PRE, if>
<53: DEL, (>
<53: DEL, (>
<53: IDE, a>
<53: REL, ==>
<53: IDE, c>
<53: LOG, &&>
<53: IDE, a>
<53: REL, <=>
<53: IDE, d>
<53: DEL, )>
<53: DEL, )>
<53: PRE, then>
<53: DEL, {>
<54: IDE, a>
<54: ART, ++>
<54: DEL, ;>
<55: DEL, }>
<55: PRE, else>
<55: DEL, {>
<56: PRE, if>
<56: DEL, (>
<56: IDE, a>
<56: REL, <>
<56: NRO, 5>
<56: DEL, )>
<56: PRE, then>
<56: DEL, {>
<57: IDE, b>
<57: REL, =>
<57: IDE, a>
<57: DEL, .>
<57: IDE, besta>
<57: ART, *>
<57: NRO, 3>
<57: DEL, ;>
<58: DEL, }>
<58: PRE, else>
<58: DEL, {>
<59: PRE, if>
<59: DEL, (>
<59: IDE, a>
<59: REL, <>
<59: NRO, 10>
<59: DEL, )>
<59: PRE, then>
<59: DEL, {>
<60: IDE, a>
<60: REL, =>
<60: IDE, a>
<60: ART, +>
<60: NRO, 3>
<60: DEL, ;>
<61: DEL, }>
<62: DEL, }>
<63: DEL, }>
<64: PRE, return>
<64: IDE, a>
<64: DEL, ;>
<65: DEL, }>
<67: PRE, procedure>
<67: IDE, addNum>
<67: DEL, (>
<67: PRE, real>
<67: IDE, a>
<67: DEL, )>
<67: DEL, {>
<68: PRE, var>
<68: DEL, {>
<68: DEL, }>
<69: IDE, a>
<69: REL, =>
<69: IDE, a>
<69: ART, +>
<69: NRO, 20>
<69: DEL, ;>
<70: DEL, }>
